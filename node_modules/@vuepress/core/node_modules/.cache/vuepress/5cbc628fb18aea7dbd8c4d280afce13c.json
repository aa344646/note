{"remainingRequest":"/Users/macbookpro/Desktop/BLOG/LIU-BLOG/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/macbookpro/Desktop/BLOG/LIU-BLOG/node_modules/vuepress-plugin-fulltext-search/services/flexsearchSvc.js","dependencies":[{"path":"/Users/macbookpro/Desktop/BLOG/LIU-BLOG/node_modules/vuepress-plugin-fulltext-search/services/flexsearchSvc.js","mtime":1714009644895},{"path":"/Users/macbookpro/Desktop/BLOG/LIU-BLOG/node_modules/cache-loader/dist/cjs.js","mtime":1714009625470},{"path":"/Users/macbookpro/Desktop/BLOG/LIU-BLOG/node_modules/babel-loader/lib/index.js","mtime":1714009625318}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Flexsearch","_","index","cyrillicIndex","cjkIndex","pagesByPath","cjkRegex","buildIndex","allPages","options","pages","filter","p","frontmatter","search","indexSettings","encode","tokenize","split","async","doc","id","field","add","cyrillicPages","charsets","cyrillic","cjkPages","cjk","length","str","cjkWords","m","exec","push","keyBy","match","queryString","queryTerms","limit","searchParams","query","boost","searchResult1","searchResult2","searchResult3","searchResult","uniqBy","result","map","page","parentPageTitle","getParentPageTitle","getAdditionalInfo","normalizeString","resultByParent","groupBy","values","arr","x","i","flat","pathParts","path","parentPagePath","parentPage","title","toLowerCase","getMatch","getFullHeading","slug","contentStr","headerIndex","headers","findLastIndex","h","charIndex","getContentStr","headingStr","headersPath","header","unshift","level","join","prefixPath","slice","prefixLength","sum","headingHighlight","termLength","terms","matches","t","getHeaderMatch","getContentMatch","every","find","term","normalizedTitle","indexOf","normalizedContent","snippetLength","lineStartIndex","content","lastIndexOf","lineEndIndex","line","lineCharIndex","contentHighlight","additionalCharactersFromStart","round","snippetStart","Math","max","snippetEnd","min","trim","normalize","replace"],"sources":["/Users/macbookpro/Desktop/BLOG/LIU-BLOG/node_modules/vuepress-plugin-fulltext-search/services/flexsearchSvc.js"],"sourcesContent":["import Flexsearch from 'flexsearch'\n// Use when flexSearch v0.7.0 will be available\n// import cyrillicCharset from 'flexsearch/dist/lang/cyrillic/default.min.js'\n// import cjkCharset from 'flexsearch/dist/lang/cjk/default.min.js'\nimport _ from 'lodash'\n\nlet index = null\nlet cyrillicIndex = null\nlet cjkIndex = null\nlet pagesByPath = null\n\nconst cjkRegex = /[\\u3131-\\u314e|\\u314f-\\u3163|\\uac00-\\ud7a3]|[\\u4E00-\\u9FCC\\u3400-\\u4DB5\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\ud840-\\ud868][\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|[\\ud86a-\\ud86c][\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d]|[\\u3041-\\u3096]|[\\u30A1-\\u30FA]/giu\n\nexport default {\n  buildIndex(allPages, options) {\n    const pages = allPages.filter(p => !p.frontmatter || p.frontmatter.search !== false)\n    const indexSettings = {\n      encode: options.encode || 'simple',\n      tokenize: options.tokenize || 'forward',\n      split: options.split || /\\W+/,\n      async: true,\n      doc: {\n        id: 'key',\n        // here you choose the fields you want to index.\n        // for me I will search in the title and the content of each page.\n        // of course I stripped the content before so I use the plain text content not the markdown text\n        field: ['title', 'headersStr', 'content'],\n      },\n    }\n    index = new Flexsearch(indexSettings)\n    index.add(pages)\n\n    const cyrillicPages = pages.filter(p => p.charsets.cyrillic)\n    const cjkPages = pages.filter(p => p.charsets.cjk)\n\n    if (cyrillicPages.length) {\n      cyrillicIndex = new Flexsearch({\n        ...indexSettings,\n        encode: 'icase',\n        split: /\\s+/,\n        tokenize: 'forward',\n      })\n      cyrillicIndex.add(cyrillicPages)\n    }\n    if (cjkPages.length) {\n      cjkIndex = new Flexsearch({\n        ...indexSettings,\n        encode: false,\n        tokenize: function(str) {\n          const cjkWords = []\n          let m = null\n          do {\n            m = cjkRegex.exec(str)\n            if (m) {\n              cjkWords.push(m[0])\n            }\n          } while (m)\n          return cjkWords\n        },\n      })\n      cjkIndex.add(cjkPages)\n    }\n    pagesByPath = _.keyBy(pages, 'path')\n  },\n  async match(queryString, queryTerms, limit = 7) {\n    const searchParams = [\n      {\n        field: 'title',\n        query: queryString,\n        limit,\n        boost: 10,\n      },\n      {\n        field: 'headersStr',\n        query: queryString,\n        limit,\n        boost: 7,\n      },\n      {\n        field: 'content',\n        query: queryString,\n        limit,\n      },\n    ]\n    const searchResult1 = await index.search(searchParams)\n    const searchResult2 = cyrillicIndex ? await cyrillicIndex.search(searchParams) : []\n    const searchResult3 = cjkIndex ? await cjkIndex.search(searchParams) : []\n    const searchResult = _.uniqBy([...searchResult1, ...searchResult2, ...searchResult3], 'path')\n    const result = searchResult.map(page => ({\n      ...page,\n      parentPageTitle: getParentPageTitle(page),\n      ...getAdditionalInfo(page, normalizeString(queryString), queryTerms),\n    }))\n\n    const resultByParent = _.groupBy(result, 'parentPageTitle')\n    return _.values(resultByParent)\n      .map(arr =>\n        arr.map((x, i) => {\n          if (i === 0) return x\n          return { ...x, parentPageTitle: null }\n        }),\n      )\n      .flat()\n  },\n  normalizeString,\n}\n\nfunction getParentPageTitle(page) {\n  const pathParts = page.path.split('/')\n  let parentPagePath = '/'\n  if (pathParts[1]) parentPagePath = `/${pathParts[1]}/`\n\n  const parentPage = pagesByPath[parentPagePath] || page\n  return parentPage.title\n}\n\nfunction getAdditionalInfo(page, queryString, queryTerms) {\n  const query = queryString.toLowerCase()\n  const match = getMatch(page, query, queryTerms)\n  if (!match)\n    return {\n      ...getFullHeading(page),\n      slug: '',\n      contentStr: null,\n    }\n\n  if (match.headerIndex != null) {\n    // header match\n    return {\n      ...getFullHeading(page, match.headerIndex, match),\n      slug: '#' + page.headers[match.headerIndex].slug,\n      contentStr: null,\n    }\n  }\n\n  // content match\n  let headerIndex = _.findLastIndex(page.headers || [], h => h.charIndex != null && h.charIndex < match.charIndex)\n  if (headerIndex === -1) headerIndex = null\n\n  return {\n    ...getFullHeading(page, headerIndex),\n    slug: headerIndex == null ? '' : '#' + page.headers[headerIndex].slug,\n    ...getContentStr(page, match),\n  }\n}\n\nfunction getFullHeading(page, headerIndex, match) {\n  if (headerIndex == null) return { headingStr: page.title }\n  const headersPath = []\n  while (headerIndex != null) {\n    const header = page.headers[headerIndex]\n    headersPath.unshift(header)\n    headerIndex = _.findLastIndex(page.headers, h => h.level === header.level - 1, headerIndex - 1)\n    if (headerIndex === -1) headerIndex = null\n  }\n\n  const headingStr = headersPath.map(h => h.title).join(' > ')\n  const prefixPath = headersPath.slice(0, -1)\n  const prefixLength = _.sum(prefixPath.map(p => (p.title || '').length)) + prefixPath.length * 3\n  const headingHighlight = match && match.headerIndex != null && [match.charIndex + prefixLength, match.termLength]\n  return { headingStr, headingHighlight }\n}\n\nfunction getMatch(page, query, terms) {\n  const matches = terms\n    .map(t => {\n      return getHeaderMatch(page, t) || getContentMatch(page, t)\n    })\n    .filter(m => m)\n  if (matches.length === 0) return null\n\n  if (matches.every(m => m.headerIndex != null)) {\n    return getHeaderMatch(page, query) || matches[0]\n  }\n\n  return getContentMatch(page, query) || matches.find(m => m.headerIndex == null)\n}\n\nfunction getHeaderMatch(page, term) {\n  if (!page.headers) return null\n  for (let i = 0; i < page.headers.length; i++) {\n    const h = page.headers[i]\n    const charIndex = h.normalizedTitle.indexOf(term)\n    if (charIndex === -1) continue\n    return {\n      headerIndex: i,\n      charIndex,\n      termLength: term.length,\n    }\n  }\n  return null\n}\n\nfunction getContentMatch(page, term) {\n  if (!page.normalizedContent) return null\n  const charIndex = page.normalizedContent.indexOf(term)\n  if (charIndex === -1) return null\n\n  return { headerIndex: null, charIndex, termLength: term.length }\n}\n\nfunction getContentStr(page, match) {\n  const snippetLength = 120\n  const { charIndex, termLength } = match\n\n  let lineStartIndex = page.content.lastIndexOf('\\n', charIndex)\n  let lineEndIndex = page.content.indexOf('\\n', charIndex)\n\n  if (lineStartIndex === -1) lineStartIndex = 0\n  if (lineEndIndex === -1) lineEndIndex = page.content.length\n\n  const line = page.content.slice(lineStartIndex, lineEndIndex)\n  const lineCharIndex = charIndex - lineStartIndex\n  const contentHighlight = [lineCharIndex, termLength]\n\n  if (snippetLength >= line.length) return { contentStr: line, contentHighlight }\n\n  const additionalCharactersFromStart = _.round((snippetLength - termLength) / 2)\n  const snippetStart = Math.max(lineCharIndex - additionalCharactersFromStart, 0)\n  const snippetEnd = Math.min(snippetStart + snippetLength, line.length)\n  let contentStr = line.slice(snippetStart, snippetEnd)\n  contentHighlight[0] = contentHighlight[0] - snippetStart\n\n  if (snippetStart > 0) {\n    contentStr = '...' + contentStr\n    contentHighlight[0] = contentHighlight[0] + 3\n  }\n  if (snippetEnd < line.length) contentStr = contentStr + '...'\n  return {\n    contentStr,\n    contentHighlight,\n  }\n}\n\nfunction normalizeString(str) {\n  if (!str) return str\n  return str\n    .trim()\n    .toLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n}\n"],"mappings":"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","ignoreList":[]}]}